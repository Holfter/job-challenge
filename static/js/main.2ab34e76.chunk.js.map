{"version":3,"sources":["api.js","components/Crud/Crud.js","components/Sidebar/Sidebar.jsx","components/MediaDoDia/Cards.jsx","components/Chart/Chart.js","components/Clientes/Clientes.jsx","components/Dashboard/Dashboard.jsx","App.js","index.js"],"names":["api","axios","create","baseURL","Crud","price","useState","clientes","setClientes","reload","setReload","updateClient","setUpdateClient","showPopup","setPopup","pctDaUsina","setPctDaUsina","error","setError","useEffect","fetchClient","a","get","then","res","data","count","i","length","usinas","percentualDeParticipacao","handleUpdate","_id","cliente","old","newClient","numeroCliente","nomeCliente","usinaId","patch","window","location","client","useForm","register","handleSubmit","reset","defaultValues","mode","register2","handleSubmit2","reset2","defaultValues2","onSubmit","rest","post","className","style","color","autoComplete","placeholder","type","min","required","id","list","push","map","item","key","src","process","alt","toFixed","onClick","delete","renderItems","defaultValue","Sidebar","to","activeClassName","Cards","cards","options","opt","average","reduce","b","name","toUpperCase","Chart","handleChartOt","formatData","usinaData","chartOpt","CustomTooltip","payload","label","active","value","ResponsiveContainer","width","height","AreaChart","x1","y1","x2","y2","offset","stopColor","stopOpacity","Area","dataKey","stroke","fill","XAxis","tickFormatter","n","YAxis","Tooltip","content","CartesianGrid","opacity","vertical","Clientes","mounted","slice","Dashboard","App","setUsinaData","setChartOpt","setPrice","setAverage","React","useCallback","hour","precise_round","minutes","parseInt","num","decimals","t","Math","pow","round","sign","getDiff","d1","moment","tempo_h","d2","at","averageKW","potencia_kW","this","time","duration","diff","_data","hours","getUsinaData","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ab34e76.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:3001\",\r\n});\r\n\r\nexport default api;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport api from \"../../api\";\r\nimport \"./Crud.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { BiEdit, BiTrash } from \"react-icons/bi\";\r\n//import { handleUpdate, handleDelete } from \"./handlers/handlers\";\r\nconst Crud = ({ price }) => {\r\n  const [clientes, setClientes] = useState([]);\r\n  const [reload, setReload] = useState(false);\r\n  const [updateClient, setUpdateClient] = useState(\"\");\r\n  const [showPopup, setPopup] = useState(false);\r\n  const [pctDaUsina, setPctDaUsina] = useState(0);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  //Getting clients data from database\r\n  useEffect(() => {\r\n    const fetchClient = async () => {\r\n      await api.get(\"https://sharenergy.herokuapp.com/clientes\").then((res) => {\r\n        setClientes(res.data.data);\r\n      });\r\n    };\r\n    fetchClient();\r\n  }, [reload]);\r\n\r\n  //Check if the factory clients's participation is les than 100%\r\n  useEffect(() => {\r\n    let count = 0;\r\n    for (let i = 0; i < clientes.length; i++) {\r\n      if (count < 100) {\r\n        count += clientes[i].usinas[0].percentualDeParticipacao;\r\n      }\r\n    }\r\n    setPctDaUsina(count);\r\n  }, [clientes]);\r\n\r\n  //Update the chosen field of the client\r\n  const handleUpdate = async (data) => {\r\n    const old = await api\r\n      .get(`https://sharenergy.herokuapp.com/clientes/${data._id}`)\r\n      .then((res) => res.data.cliente);\r\n    const newClient = {\r\n      numeroCliente:\r\n        data.numeroCliente.length === 0\r\n          ? old.numeroCliente\r\n          : data.numeroCliente,\r\n      nomeCliente:\r\n        data.nomeCliente.length === 0 ? old.nomeCliente : data.nomeCliente,\r\n      usinas: [\r\n        {\r\n          usinaId:\r\n            data.usinaId.length === 0 ? old.usinas[0].usinaId : data.usinaId,\r\n          percentualDeParticipacao:\r\n            data.percentualDeParticipacao * 1 <=\r\n            100 - (pctDaUsina - old.usinas[0].percentualDeParticipacao)\r\n              ? data.percentualDeParticipacao\r\n              : old.usinas[0].percentualDeParticipacao,\r\n        },\r\n      ],\r\n    };\r\n    api.patch(\r\n      `https://sharenergy.herokuapp.com/clientes/${data._id}`,\r\n      newClient\r\n    );\r\n    window.location.reload();\r\n  };\r\n\r\n  //Delete client\r\n  const handleDelete = (id) => {\r\n    api.delete(`https://sharenergy.herokuapp.com/clientes/${id}`);\r\n    setReload(!reload);\r\n  };\r\n\r\n  //Model client receives all datas from the form and fill all the fields\r\n  const client = (data) => {\r\n    return {\r\n      numeroCliente: data.numeroCliente,\r\n      nomeCliente: data.nomeCliente,\r\n      usinas: [\r\n        {\r\n          usinaId: data.usinaId,\r\n          percentualDeParticipacao: data.percentualDeParticipacao,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  //Form handler\r\n  const { register, handleSubmit, reset, defaultValues } = useForm();\r\n\r\n  const {\r\n    register: register2,\r\n    handleSubmit: handleSubmit2,\r\n    reset: reset2,\r\n    defaultValues: defaultValues2,\r\n  } = useForm({\r\n    mode: \"onBlur\",\r\n  });\r\n\r\n  //On form submit, make a post request calling 'client' and passing data from form to it\r\n  const onSubmit = async (data) => {\r\n    let rest = data.percentualDeParticipacao * 1;\r\n    if (pctDaUsina <= 100 && rest <= 100 - pctDaUsina) {\r\n      await api.post(\"https://sharenergy.herokuapp.com/clientes\", client(data));\r\n      reset({ ...defaultValues });\r\n      setError(\"\");\r\n    } else {\r\n      setError(\r\n        \"Limite de participação da usina atingido ou valor digitado não disponivel\"\r\n      );\r\n    }\r\n    setReload(!reload);\r\n  };\r\n\r\n  //Show or hide update popup\r\n  const showPopupUpdate = (id) => {\r\n    setUpdateClient(id);\r\n    setPopup(!showPopup);\r\n    reset2({ ...defaultValues2 });\r\n  };\r\n\r\n  //Render client rows\r\n  const renderItems = (clientes) => {\r\n    let list = [];\r\n    if (clientes.length !== 0) {\r\n      list.push(\r\n        clientes.map((item, key) => (\r\n          <tr className=\"tr\" key={key}>\r\n            <td>\r\n              <img\r\n                className=\"clientPic\"\r\n                src={`${process.env.PUBLIC_URL}/client.PNG`}\r\n                alt=\"cliente\"\r\n              />\r\n              {item.nomeCliente}\r\n            </td>\r\n            <td>{item.numeroCliente}</td>\r\n            <td>{item.usinas[0].usinaId}</td>\r\n            <td>{item.usinas[0].percentualDeParticipacao}%</td>\r\n            <td>\r\n              R$\r\n              {(\r\n                (price / 100) *\r\n                item.usinas[0].percentualDeParticipacao\r\n              ).toFixed(2)}\r\n            </td>\r\n            <td\r\n              onClick={() => {\r\n                showPopupUpdate(item._id);\r\n              }}\r\n            >\r\n              <BiEdit />\r\n            </td>\r\n            <td onClick={() => handleDelete(item._id)}>\r\n              <BiTrash />\r\n            </td>\r\n          </tr>\r\n        ))\r\n      );\r\n    }\r\n    return list;\r\n  };\r\n\r\n  return (\r\n    <div className=\"crud\">\r\n      <h1>Adicionar cliente</h1>\r\n      <p style={{ color: \"red\" }}>{error}</p>\r\n      <form\r\n        autoComplete=\"off\"\r\n        className=\"form\"\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <input\r\n          placeholder=\"Numero do Cliente\"\r\n          type=\"number\"\r\n          min=\"0\"\r\n          {...register(\"numeroCliente\", { required: true })}\r\n        />\r\n        <input\r\n          placeholder=\"Nome\"\r\n          {...register(\"nomeCliente\", { required: true })}\r\n        />\r\n        <input\r\n          placeholder=\"ID da usina\"\r\n          type=\"number\"\r\n          min=\"0\"\r\n          {...register(\"usinaId\", { required: true })}\r\n        />\r\n        <input\r\n          placeholder=\"Participação\"\r\n          type=\"number\"\r\n          min=\"0\"\r\n          {...register(\"percentualDeParticipacao\", { required: true })}\r\n        />\r\n        <button className=\"crudSubmit\" type=\"submit\">\r\n          Criar\r\n        </button>\r\n      </form>\r\n\r\n      <div className=\"client_list\">\r\n        <div className=\"client_item\">\r\n          <table id=\"customers\">\r\n            <tbody>\r\n              <tr>\r\n                <th>Nome</th>\r\n                <th>Numero</th>\r\n                <th>ID Usina</th>\r\n                <th>Participação</th>\r\n                <th>Lucro</th>\r\n                <th></th>\r\n                <th></th>\r\n              </tr>\r\n              {renderItems(clientes)}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div className={showPopup ? \"editPopup show\" : \"editPopup\"}>\r\n        <div className=\"closePopup\">\r\n          <span onClick={() => setPopup(!showPopup)}>X</span>\r\n        </div>\r\n        <form\r\n          autoComplete=\"off\"\r\n          className=\"form\"\r\n          onSubmit={handleSubmit2(handleUpdate)}\r\n        >\r\n          <input\r\n            placeholder=\"Numero do Cliente\"\r\n            type=\"number\"\r\n            min=\"0\"\r\n            {...register2(\"numeroCliente\")}\r\n          />\r\n          <input placeholder=\"Nome\" {...register2(\"nomeCliente\")} />\r\n          <input\r\n            placeholder=\"ID da usina\"\r\n            type=\"number\"\r\n            min=\"0\"\r\n            {...register2(\"usinaId\")}\r\n          />\r\n          <input\r\n            placeholder=\"Participação\"\r\n            type=\"number\"\r\n            min=\"0\"\r\n            {...register2(\"percentualDeParticipacao\")}\r\n          />\r\n          <input\r\n            {...register2(\"_id\")}\r\n            type=\"hidden\"\r\n            defaultValue={updateClient}\r\n          />\r\n          <button\r\n            className=\"crudSubmit\"\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              setPopup(!showPopup);\r\n            }}\r\n          >\r\n            Atualizar\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Crud;\r\n","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { BiDoughnutChart, BiDollar } from \"react-icons/bi\";\r\nconst Sidebar = () => {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebarLogo\">\r\n        <Link to=\"/dashboard\">SHARENERGY</Link>\r\n      </div>\r\n      <div className=\"sidebar-navegation\">\r\n        <NavLink activeClassName=\"selected\" to=\"/dashboard\">\r\n          <div>\r\n            <BiDoughnutChart />\r\n            <span>Dashboard</span>\r\n          </div>\r\n        </NavLink>\r\n\r\n        <NavLink activeClassName=\"selected\" to=\"/clientes\">\r\n          <div>\r\n            <BiDollar />\r\n            <span>Clientes</span>\r\n          </div>\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport \"./Cards.css\";\r\n\r\nconst Cards = ({ data }) => {\r\n  //Get the average for each item in the array\r\n  const cards = [];\r\n  const options = [\"tensao_V\", \"corrente_A\", \"potencia_kW\", \"temperatura_C\"];\r\n  for (let i = 0; i < options.length; i++) {\r\n    const opt = options[i];\r\n    const list = data.map((item) => item[opt], this);\r\n    const average = list.reduce((a, b) => a + b, 0) / list.length;\r\n    const item = { name: opt, average: average.toFixed(2) };\r\n    cards.push(item);\r\n  }\r\n\r\n  return (\r\n    <div className=\"cards-average\">\r\n      <h2 className=\"cardsTitle\">Média do dia</h2>\r\n      <div className=\"cards\">\r\n        {cards.map((item, key) => (\r\n          <div className=\"average-card\" key={key}>\r\n            <img\r\n              className=\"cardImage\"\r\n              src={`${process.env.PUBLIC_URL}/${item.name}.PNG`}\r\n              alt=\"img\"\r\n            />\r\n            <div>\r\n              <p className=\"cardName\">{item.name.toUpperCase()}</p>\r\n              <span className=\"cardValue\">{item.average}</span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport \"./Chart.css\";\r\n\r\nimport {\r\n  ResponsiveContainer,\r\n  AreaChart,\r\n  XAxis,\r\n  YAxis,\r\n  Area,\r\n  Tooltip,\r\n  CartesianGrid,\r\n} from \"recharts\";\r\n\r\nconst Chart = ({ handleChartOt, formatData, usinaData, chartOpt }) => {\r\n  //Custom tool tip for the chart, showing data according to the option selected\r\n  function CustomTooltip({ payload, label, active }) {\r\n    if (active) {\r\n      return (\r\n        <div className=\"custom-tooltip\">\r\n          <p className=\"label\">Hora: {formatData(label)}</p>\r\n          <p className=\"payload\">Valor: {`${payload[0].value}`}</p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"chart\">\r\n        <ResponsiveContainer width=\"100%\" height={500}>\r\n          <AreaChart data={usinaData}>\r\n            <defs>\r\n              <linearGradient id=\"color\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"0%\" stopColor=\"#2451B7\" stopOpacity={0.4}></stop>\r\n                <stop\r\n                  offset=\"75%\"\r\n                  stopColor=\"#2451B7\"\r\n                  stopOpacity={0.05}\r\n                ></stop>\r\n              </linearGradient>\r\n            </defs>\r\n            <Area dataKey={chartOpt} stroke=\"#2451B7\" fill=\"url(#color)\"></Area>\r\n            <XAxis\r\n              dataKey=\"tempo_h\"\r\n              tickFormatter={(n) => formatData(n)}\r\n            ></XAxis>\r\n            <YAxis dataKey={chartOpt}></YAxis>\r\n            <Tooltip content={<CustomTooltip />}></Tooltip>\r\n            <CartesianGrid opacity={0.5} vertical={false} />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n        <div className=\"chart-options\">\r\n          <div>\r\n            <button\r\n              className={chartOpt === \"tensao_V\" ? \"button active\" : \"button\"}\r\n              onClick={() => handleChartOt(\"tensao_V\")}\r\n            >\r\n              Tensão\r\n            </button>\r\n            <button\r\n              className={chartOpt === \"corrente_A\" ? \"button active\" : \"button\"}\r\n              onClick={() => handleChartOt(\"corrente_A\")}\r\n            >\r\n              Corrente\r\n            </button>\r\n            <button\r\n              className={\r\n                chartOpt === \"potencia_kW\" ? \"button active\" : \"button\"\r\n              }\r\n              onClick={() => handleChartOt(\"potencia_kW\")}\r\n            >\r\n              Potência\r\n            </button>\r\n            <button\r\n              className={\r\n                chartOpt === \"temperatura_C\" ? \"button active\" : \"button\"\r\n              }\r\n              onClick={() => handleChartOt(\"temperatura_C\")}\r\n            >\r\n              Temperatura\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport api from \"../../api\";\r\nimport \"./Clientes.css\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Clientes = () => {\r\n  const [clientes, setClientes] = useState([]);\r\n\r\n  //Get clients to show on dashboard page, get just 6 items\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    api.get(\"https://sharenergy.herokuapp.com/clientes\").then((res) => {\r\n      if (mounted) {\r\n        setClientes(res.data.data.slice(0, 6));\r\n      }\r\n    });\r\n    return () => (mounted = false);\r\n  }, []);\r\n  return (\r\n    <div className=\"clientes\">\r\n      <h1>Clientes</h1>\r\n      <div className=\"clienteList\">\r\n        {clientes.map((item, key) => (\r\n          <div className=\"clientCard\" key={key}>\r\n            <div>\r\n              Nome: <b>{item.nomeCliente}</b>\r\n            </div>\r\n            <div>\r\n              Numero: <b>{item.numeroCliente}</b>\r\n            </div>\r\n            <div>\r\n              Usina id: <b>{item.usinas[0].usinaId}</b>\r\n            </div>\r\n            <div>\r\n              Participação: <b>{item.usinas[0].percentualDeParticipacao}%</b>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <div className=\"verMais\">\r\n          {clientes.length > 5 ? <Link to=\"/clientes\">Ver mais</Link> : \"\"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Clientes;\r\n","import React from \"react\";\r\nimport Cards from \"../MediaDoDia/Cards\";\r\nimport Chart from \"../Chart/Chart\";\r\nimport Clientes from \"../Clientes/Clientes\";\r\nimport \"./Dashboard.css\";\r\nconst Dashboard = ({\r\n  handleChartOt,\r\n  formatData,\r\n  usinaData,\r\n  chartOpt,\r\n  price,\r\n  average,\r\n}) => {\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"dashboard-top\">\r\n        <h1>Dashboard</h1>\r\n        <div className=\"kwPrice-card\">\r\n          <div>\r\n            {average.toFixed(2)} <b>kWh</b>\r\n          </div>\r\n          <div>\r\n            <b>R$</b> {price.toFixed(2)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"ch\">\r\n        <div className=\"content\">\r\n          <div>\r\n            <Cards data={usinaData} />\r\n          </div>\r\n          <div>\r\n            {usinaData.length !== 0 && (\r\n              <Chart\r\n                handleChartOt={handleChartOt}\r\n                formatData={formatData}\r\n                usinaData={usinaData}\r\n                chartOpt={chartOpt}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Clientes />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport api from \"./api\";\nimport { useEffect, useState } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Crud from \"./components/Crud/Crud\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport moment from \"moment\";\n\nfunction App() {\n  //Data from the factory and option for the chart\n  const [usinaData, setUsinaData] = useState([]);\n  const [chartOpt, setChartOpt] = useState(\"tensao_V\");\n  const [price, setPrice] = useState(0);\n  const [average, setAverage] = useState(0);\n\n  //Format the hour without changing its value\n  const formatData = React.useCallback((n) => {\n    const hour = precise_round(n, 2);\n    const minutes = (hour % 1) * 60;\n    return `${parseInt(hour)}:${parseInt(minutes)}`;\n  }, []);\n\n  //Get all data from the factory and set the state\n  useEffect(() => {\n    function getDiff(data) {\n      const d1 = moment(\n        `${formatData(precise_round(data[0].tempo_h, 2))}:00 am`,\n        \"HH:mm:ss a\"\n      );\n      const d2 = moment(\n        `${formatData(precise_round(data.at(-1).tempo_h, 2))}:00 pm`,\n        \"HH:mm:ss a\"\n      );\n\n      //KW Produzido no dia\n      const list = data.map((item) => item.potencia_kW, this);\n      const averageKW = list.reduce((a, b) => a + b, 0);\n\n      const time = moment.duration(d2.diff(d1))._data;\n      setAverage(averageKW / (time.minutes / 60 + time.hours));\n      setPrice((averageKW / (time.minutes / 60 + time.hours)) * 0.95);\n    }\n    const getUsinaData = async () => {\n      await api.get(\"https://sharenergy.herokuapp.com/usina\").then((res) => {\n        setUsinaData(res.data.data);\n        getDiff(res.data.data);\n      });\n    };\n\n    getUsinaData();\n  }, [formatData]);\n\n  //Format the number to n decimal cases\n  function precise_round(num, decimals) {\n    var t = Math.pow(10, decimals);\n    return (\n      Math.round(\n        num * t +\n          (decimals > 0 ? 1 : 0) *\n            (Math.sign(num) * (10 / Math.pow(100, decimals)))\n      ) / t\n    ).toFixed(decimals);\n  }\n\n  //Set chartOpt\n  const handleChartOt = (opt) => {\n    setChartOpt(opt);\n  };\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <div className=\"side\">\n          <Sidebar />\n        </div>\n        <Route exact path=\"/dashboard\">\n          <div>\n            <Dashboard\n              average={average}\n              price={price}\n              handleChartOt={handleChartOt}\n              formatData={formatData}\n              usinaData={usinaData}\n              chartOpt={chartOpt}\n            />\n          </div>\n        </Route>\n        <Route path=\"/clientes\">\n          <div>\n            <Crud price={price}></Crud>\n          </div>\n        </Route>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}